// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type HeroDocumentDataSlicesSlice = HeroImageSlice | MainTitleSlice;

/**
 * Content for Hero documents
 */
interface HeroDocumentData {
  /**
   * Slice Zone field in *Hero*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HeroDocumentDataSlicesSlice> /**
   * Meta Title field in *Hero*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: hero.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Hero*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: hero.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Hero*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Hero document from Prismic
 *
 * - **API ID**: `hero`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HeroDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<Simplify<HeroDocumentData>, "hero", Lang>;

export type AllDocumentTypes = HeroDocument;

/**
 * Primary content in *HeroImage → Default → Primary*
 */
export interface HeroImageSliceDefaultPrimary {
  /**
   * Hero field in *HeroImage → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_image.default.primary.hero
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  hero: prismic.ImageField<never>;
}

/**
 * Default variation for HeroImage Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroImageSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroImageSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeroImage*
 */
type HeroImageSliceVariation = HeroImageSliceDefault;

/**
 * HeroImage Shared Slice
 *
 * - **API ID**: `hero_image`
 * - **Description**: HeroImage
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroImageSlice = prismic.SharedSlice<
  "hero_image",
  HeroImageSliceVariation
>;

/**
 * Primary content in *MainTitle → Default → Primary*
 */
export interface MainTitleSliceDefaultPrimary {
  /**
   * mainTitle field in *MainTitle → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: mainTitle
   * - **API ID Path**: main_title.default.primary.maintitle
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  maintitle: prismic.KeyTextField;
}

/**
 * Default variation for MainTitle Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MainTitleSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MainTitleSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *MainTitle*
 */
type MainTitleSliceVariation = MainTitleSliceDefault;

/**
 * MainTitle Shared Slice
 *
 * - **API ID**: `main_title`
 * - **Description**: MainTitle
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MainTitleSlice = prismic.SharedSlice<
  "main_title",
  MainTitleSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      HeroDocument,
      HeroDocumentData,
      HeroDocumentDataSlicesSlice,
      AllDocumentTypes,
      HeroImageSlice,
      HeroImageSliceDefaultPrimary,
      HeroImageSliceVariation,
      HeroImageSliceDefault,
      MainTitleSlice,
      MainTitleSliceDefaultPrimary,
      MainTitleSliceVariation,
      MainTitleSliceDefault,
    };
  }
}
